# MTQuant Backend Dockerfile
# Production-ready Python 3.11+ FastAPI application

# Stage 1: Build TA-Lib
FROM python:3.11-slim as ta-lib-builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    build-essential \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Download and compile TA-Lib
WORKDIR /tmp
RUN wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz && \
    tar -xzf ta-lib-0.4.0-src.tar.gz && \
    cd ta-lib/ && \
    ./configure --prefix=/usr && \
    make && \
    make install

# Stage 2: Final Application Image
FROM python:3.11-slim

# Copy compiled TA-Lib libraries from builder stage
COPY --from=ta-lib-builder /usr/lib/libta_lib* /usr/lib/
COPY --from=ta-lib-builder /usr/include/ta-lib/* /usr/include/

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY mtquant/ ./mtquant/
COPY api/ ./api/
COPY config/ ./config/
COPY scripts/ ./scripts/

# Create logs directory
RUN mkdir -p logs

# Set Python path
ENV PYTHONPATH=/app

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run FastAPI with uvicorn
CMD ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

